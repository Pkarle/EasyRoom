security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                provider: user_provider
            logout:
                path: app_logout
    encoders:
        # An encoder has been set for User Entity
        App\Entity\User:
            # The password will be encrypted using bcryp encryption system
            algorithm: bcrypt
            cost: 12

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/property/create, roles: ROLE_USER }
        - { path: ^/property/update, roles: ROLE_USER }
        - { path: ^/property/liste, roles: ROLE_USER }
        - { path: ^/property/liste, roles: ROLE_USER }
        - { path: ^/user/properties, roles: ROLE_USER }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER,ROLE_HOTE]